<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ksling.examination.mapper.BookOrderMapper">
  <resultMap id="BaseResultMap" type="cn.ksling.examination.entity.BookOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="is_pay" jdbcType="INTEGER" property="isPay" />
    <result column="pay_code" jdbcType="VARCHAR" property="payCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, book_id, num, order_time, is_pay, pay_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ksling.examination.entity.BookOrder">
    insert into book_order (id, user_id, book_id, 
      num, order_time, is_pay, 
      pay_code)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{orderTime,jdbcType=TIMESTAMP}, #{isPay,jdbcType=INTEGER}, 
      #{payCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ksling.examination.entity.BookOrder">
    insert into book_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="isPay != null">
        is_pay,
      </if>
      <if test="payCode != null">
        pay_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null">
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="payCode != null">
        #{payCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ksling.examination.entity.BookOrder">
    update book_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPay != null">
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="payCode != null">
        pay_code = #{payCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ksling.examination.entity.BookOrder">
    update book_order
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      is_pay = #{isPay,jdbcType=INTEGER},
      pay_code = #{payCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from book_order
        where user_id = #{userId,jdbcType=INTEGER}
        order by id desc
    </select>
    <select id="selectByNum" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from book_order
        where num = #{num,jdbcType=INTEGER}
    </select>
    <select id="selectByBookOrderByUserIdAndBookId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from book_order
        where user_id = #{userId,jdbcType=INTEGER}
        and book_id = #{bookId,jdbcType=INTEGER}
    </select>

    <update id="updateBookOrderByPayCode" parameterType="java.lang.String">
    update book_order
    set is_pay = 1
    where pay_code = #{payCode,jdbcType=VARCHAR}
  </update>
</mapper>