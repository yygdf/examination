<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ksling.examination.mapper.FacialFeaturesInfoMapper">
  <resultMap id="BaseResultMap" type="cn.ksling.examination.entity.FacialFeaturesInfo">
    <id column="no" jdbcType="INTEGER" property="no" />
    <result column="hearing_left" jdbcType="REAL" property="hearingLeft" />
    <result column="hearing_right" jdbcType="REAL" property="hearingRight" />
    <result column="ear_infection" jdbcType="VARCHAR" property="earInfection" />
    <result column="smell" jdbcType="VARCHAR" property="smell" />
    <result column="stutter" jdbcType="VARCHAR" property="stutter" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="physician_opinion" jdbcType="VARCHAR" property="physicianOpinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    no, hearing_left, hearing_right, ear_infection, smell, stutter, other, physician_opinion
  </sql>
  <select id="selectByExample" parameterType="cn.ksling.examination.entity.FacialFeaturesInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from facial_features_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from facial_features_info
    where no = #{no,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from facial_features_info
    where no = #{no,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ksling.examination.entity.FacialFeaturesInfoExample">
    delete from facial_features_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ksling.examination.entity.FacialFeaturesInfo">
    insert into facial_features_info (no, hearing_left, hearing_right, 
      ear_infection, smell, stutter, 
      other, physician_opinion)
    values (#{no,jdbcType=INTEGER}, #{hearingLeft,jdbcType=REAL}, #{hearingRight,jdbcType=REAL}, 
      #{earInfection,jdbcType=VARCHAR}, #{smell,jdbcType=VARCHAR}, #{stutter,jdbcType=VARCHAR}, 
      #{other,jdbcType=VARCHAR}, #{physicianOpinion,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ksling.examination.entity.FacialFeaturesInfo">
    insert into facial_features_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="no != null">
        no,
      </if>
      <if test="hearingLeft != null">
        hearing_left,
      </if>
      <if test="hearingRight != null">
        hearing_right,
      </if>
      <if test="earInfection != null">
        ear_infection,
      </if>
      <if test="smell != null">
        smell,
      </if>
      <if test="stutter != null">
        stutter,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="physicianOpinion != null">
        physician_opinion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="hearingLeft != null">
        #{hearingLeft,jdbcType=REAL},
      </if>
      <if test="hearingRight != null">
        #{hearingRight,jdbcType=REAL},
      </if>
      <if test="earInfection != null">
        #{earInfection,jdbcType=VARCHAR},
      </if>
      <if test="smell != null">
        #{smell,jdbcType=VARCHAR},
      </if>
      <if test="stutter != null">
        #{stutter,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="physicianOpinion != null">
        #{physicianOpinion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ksling.examination.entity.FacialFeaturesInfoExample" resultType="java.lang.Long">
    select count(*) from facial_features_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update facial_features_info
    <set>
      <if test="record.no != null">
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.hearingLeft != null">
        hearing_left = #{record.hearingLeft,jdbcType=REAL},
      </if>
      <if test="record.hearingRight != null">
        hearing_right = #{record.hearingRight,jdbcType=REAL},
      </if>
      <if test="record.earInfection != null">
        ear_infection = #{record.earInfection,jdbcType=VARCHAR},
      </if>
      <if test="record.smell != null">
        smell = #{record.smell,jdbcType=VARCHAR},
      </if>
      <if test="record.stutter != null">
        stutter = #{record.stutter,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.physicianOpinion != null">
        physician_opinion = #{record.physicianOpinion,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update facial_features_info
    set no = #{record.no,jdbcType=INTEGER},
      hearing_left = #{record.hearingLeft,jdbcType=REAL},
      hearing_right = #{record.hearingRight,jdbcType=REAL},
      ear_infection = #{record.earInfection,jdbcType=VARCHAR},
      smell = #{record.smell,jdbcType=VARCHAR},
      stutter = #{record.stutter,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      physician_opinion = #{record.physicianOpinion,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ksling.examination.entity.FacialFeaturesInfo">
    update facial_features_info
    <set>
      <if test="hearingLeft != null">
        hearing_left = #{hearingLeft,jdbcType=REAL},
      </if>
      <if test="hearingRight != null">
        hearing_right = #{hearingRight,jdbcType=REAL},
      </if>
      <if test="earInfection != null">
        ear_infection = #{earInfection,jdbcType=VARCHAR},
      </if>
      <if test="smell != null">
        smell = #{smell,jdbcType=VARCHAR},
      </if>
      <if test="stutter != null">
        stutter = #{stutter,jdbcType=VARCHAR},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="physicianOpinion != null">
        physician_opinion = #{physicianOpinion,jdbcType=VARCHAR},
      </if>
    </set>
    where no = #{no,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ksling.examination.entity.FacialFeaturesInfo">
    update facial_features_info
    set hearing_left = #{hearingLeft,jdbcType=REAL},
      hearing_right = #{hearingRight,jdbcType=REAL},
      ear_infection = #{earInfection,jdbcType=VARCHAR},
      smell = #{smell,jdbcType=VARCHAR},
      stutter = #{stutter,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR},
      physician_opinion = #{physicianOpinion,jdbcType=VARCHAR}
    where no = #{no,jdbcType=INTEGER}
  </update>
</mapper>